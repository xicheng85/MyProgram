<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
        <bean id="stu" class="com.ynks.pojo.Student">
         <constructor-arg index="0" value="50"></constructor-arg>
         <constructor-arg name="uname" value="张三"></constructor-arg>
        </bean>
        <bean id="stuFat" class="com.ynks.pojo.StudentFactory">
        </bean>
        <bean id="stuA" factory-bean="stuFat" factory-method="studentFactory" >
        	<constructor-arg index="0" value="A"></constructor-arg>
        </bean>
        <bean id="stuC"  class="com.ynks.pojo.StudentStaticFactory" factory-method="newInstance"></bean>
        <!-- 创建 SqlSessionFactory 对象 -->
        <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <property name="dataSource"  ref="dataSource"></property>
        </bean>
        <!-- 数据库连接信息来源于 dataSource -->
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
         <property name="url"  value="jdbc:mysql://localhost:3306/ssm"></property>
         <property name="username"  value="root"></property>
         <property name="password"  value="xicheng1707"></property>
       </bean>
       <!-- 扫描器相当于 mybatis.xml 中 mappers 下 package 标签,扫描 com.bjsxt.mapper 包后会给对应接口创建对象-->
       <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       			<property name="basePackage" value="com.ynks.mapper"></property>
       			<property name="sqlSessionFactory" ref="factory"></property>
       </bean>
       <bean id="demo" class="com.ynks.text.Demo"></bean>
       <bean id="myBeforAdvice" class="com.ynks.text.MyBeforeAdvice"></bean>
       <bean id="myAfterAdvice" class="com.ynks.text.MyAfterAdvice"></bean>
       <aop:config>
       <!-- 切点带参数的写法 -->
       <!--  <aop:pointcut expression="execution(* com.ynks.text.Demo.demo2(String,int) and args(name,age))" id="mypointcut"/> -->
       <!-- 切点通配符写法 表示com.ynks.text.Demo下的任意方法 任意参数 -->
        <!--  <aop:pointcut expression="execution(* com.ynks.text.Demo.*(..)" id="mypointcut"/> -->
        <aop:pointcut expression="execution(* com.ynks.text.Demo.demo2())" id="mypointcut"/>
        <aop:advisor advice-ref="myBeforAdvice" pointcut-ref="mypointcut"/>
        <aop:advisor advice-ref="myAfterAdvice" pointcut-ref="mypointcut"/>
       </aop:config>
       	<bean id="myThrow" class="com.ynks.text.MyThrowAdivce"></bean>
       	<aop:config>
       	 <aop:aspect ref="myThrow">
       <aop:pointcut expression="execution(* com.ynks.text.Demo.demo1())" id="mypointcut"/>	
       <aop:after-throwing method="myThrow" pointcut-ref="mypointcut" throwing="e"/>
       	 </aop:aspect>
       	</aop:config>
       	<bean id="myArroud" class="com.ynks.text.MyArround"></bean>
       	<aop:config>
       	  <aop:pointcut expression="execution(* com.ynks.text.Demo.demo3())" id="mypointcut"/>	
       	  <aop:advisor advice-ref="myArroud" pointcut-ref="mypointcut"/>
       	</aop:config>
       		<bean id="MyAdvice" class="com.ynks.text.MyAdvice"></bean>
       		<bean id="deomT" class="com.ynks.text.DemoT"></bean>
       		<aop:config>
       		<aop:aspect ref="MyAdvice">
       			<aop:pointcut expression="execution(* com.ynks.text.DemoT.dO())" id="mypointcutT"/>
       			<aop:after method="MyAfter" pointcut-ref="mypointcutT"/>
       			<aop:after-returning method="MyAftering" pointcut-ref="mypointcutT"/>
       			<aop:before method="MyBefore" pointcut-ref="mypointcutT"/>
       			<aop:around method="MyArround" pointcut-ref="mypointcutT"/>
       		</aop:aspect>	
       		</aop:config>
       		<context:component-scan base-package="com.ynks.text,com.ynks.pojo"></context:component-scan>
       		<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
 </beans>